name: github actions CI demo

on:
  push:
    branches: ["main"]

 

jobs:
  compile:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: maven compile
      run: mvn compile

  security-check:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v4
      name: Install Trivy
    - run: |
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update -y
            sudo apt-get install trivy -y


    - name: Run Trivy scan
      run: trivy fs --format table -o report.json .
    - name: git leaks installation
      run: sudo apt install gitleaks -y
    - name: git leaks scan
      run: gitleaks detect source . -r gitleak-report.json -f json
   
  test:
    runs-on: self-hosted
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: maven test
      run: mvn test 
    
  build_and_sonarscan:
    runs-on: self-hosted
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: maven build
      run: mvn  package 
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app.jar
        path: target/*.jar
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL:   ${{ vars.SONAR_HOST_URL }}
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  
  docker_build:
    runs-on: self-hosted
    needs: build_and_sonarscan
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: dhruv1999oct/java-app:latest
          
          
      


  
     
 
